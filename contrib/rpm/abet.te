policy_module(abet, 1.100.1)

########################################
#
# Declarations
#

type abet_t;
type abet_exec_t;
init_daemon_domain(abet_t, abet_exec_t)

permissive abet_t;

type abet_initrc_exec_t;
init_script_file(abet_initrc_exec_t)

type abet_conf_t;
files_type(abet_conf_t)

type abet_var_lib_t;
files_type(abet_var_lib_t)

type abet_var_run_t;
files_type(abet_var_run_t)

type abet_port_t;
corenet_port(abet_port_t)

########################################
#
# abet local policy
#
allow abet_t self:process { fork };

allow abet_t self:fifo_file rw_fifo_file_perms;
allow abet_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(abet_t, abet_conf_t, abet_conf_t)
manage_files_pattern(abet_t, abet_conf_t, abet_conf_t)

manage_dirs_pattern(abet_t, abet_var_lib_t, abet_var_lib_t)
manage_files_pattern(abet_t, abet_var_lib_t, abet_var_lib_t)
files_var_lib_filetrans(abet_t, abet_var_lib_t, { dir file })

manage_dirs_pattern(abet_t, abet_var_run_t, abet_var_run_t)
manage_files_pattern(abet_t, abet_var_run_t, abet_var_run_t)

sysnet_dns_name_resolve(abet_t)
corenet_all_recvfrom_unlabeled(abet_t)

allow abet_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(abet_t)
corenet_tcp_sendrecv_generic_node(abet_t)
corenet_tcp_sendrecv_all_ports(abet_t)
corenet_tcp_bind_generic_node(abet_t)

gen_require(`
    type abet_port_t;
')
allow abet_t abet_port_t:tcp_socket name_bind;

gen_require(`
    type abet_port_t;
')
allow abet_t abet_port_t:tcp_socket name_connect;

domain_use_interactive_fds(abet_t)

files_read_etc_files(abet_t)

miscfiles_read_localization(abet_t)

sysnet_dns_name_resolve(abet_t)

allow abet_t abet_exec_t:file execute_no_trans;
allow abet_t self:process setsched;
corecmd_exec_ls(abet_t)
corenet_tcp_connect_http_port(abet_t)
dev_read_urand(abet_t)
fs_getattr_xattr_fs(abet_t)
kernel_read_system_state(abet_t)
